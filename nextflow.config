/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    popgen48/scalepopgen_v1 Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = null
    sample_map                 = null
    color_map                  = null
    outprefix                  = 'scalepopgen'
    max_chrom                  = 30
    allow_extra_chrom          = false
    chrom_length_map           = null
    chrom_id_map               = null
    fasta                      = null
    outgroup                   = null


    // samples and sites filtering
    apply_indi_filters         = false
    king_cutoff                = null
    mind                       = null
    rem_indi                   = null
    apply_snp_filters          = false
    custom_snps                = null
    custom_snps_process        = null
    maf                        = null
    min_meanDP                 = null
    max_meanDP                 = null
    hwe                        = null
    max_missing                = null
    minQ                       = null
    indiv_summary              = false

    // explore genetic structure
    genetic_structure          = false
    rem_indi_structure         = null
    ld_filt                    = false
    ld_window_size             = 50
    ld_step_size               = 10
    r2_threshold               = 0.1
    smartpca                   = false
    smartpca_param             = null
    pca_plot_yml               = 'scalepopgen/extra/plots/pca.yml'
    marker_map                 = null
    admixture                  = false
    start_k                    = 2
    end_k                      = 21
    admixture_args             = "--cv=5"
    admixture_colors           = 'scalepopgen/extra/hexcolorcodes.txt'
    admixture_plot_pop_order   = null
    admixture_plot_yml         = 'scalepopgen/extra/plots/admixture.yml'
    pairwise_global_fst        = false
    fst_plot_yml               = 'scalepopgen/extra/plots/fst_nj.yml'
    ibs_dist                   = false
    ibs_plot_yml               = 'scalepopgen/extra/plots/ibs_nj.yml'

    // treemix options
    treemix                    = false
    k_snps                     = 500
    treemix_args               = null
    n_bootstrap                = 0
    set_random_seed            = true
    n_mig                      = 0
    n_iter                     = 0
    rand_k_snps                = true

    //selection options
    min_sample_size            = null
    skip_pop                   = null
    skip_outgroup              = false
    selection_plot_yml         = 'scalepopgen/extra/plots/manhattanplot.yml'
    pairwise_local_fst         = false
    fst_one_vs_all             = false
    tajimas_d                  = false
    pi_val                     = false
    skip_chromwise             = false
    window_size                = 50000
    step_size                  = 50000
    perc_threshold             = 0.01

    est_anc_alleles            = false
    anc_alleles_map            = null

    sweepfinder2               = false
    sweepfinder2_model         = "l"  // other possible option: "s" or "lr" 
    grid_space                 = 50000
    grid_points                = null
    recomb_map                 = null 

	
    // phasing parameters
    skip_phasing              = false
    phasing_panel             = null
    phasing_map               = null
    beagle5                   = false
    burnin                    = 6
    iterations                = 12
    ne                        = 1000000
    impute                    = false
    beagle5_args              = null
    shapeit5                  = true
    shapeit5_args             = null

    // selscan options
    selscan_map               = null
    ihs                       = false
    xpehh                     = false
    ihs_args                  = null
    xpehh_args                = null
    ihs_norm_args             = null
    xpehh_norm_args           = null
     

    // MultiQC options
    multiqc_config             = null
    multiqc_report_yml         = 'scalepopgen/assets/multiqc_summary.yml'
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = null
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false

    // Config options
    config_profile_name        = null
    config_profile_description = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = 'genomes,igenomes_base'
    validationShowHiddenParams       = false
    validate_params                  = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 4
        executor.memory        = 8.GB
    }

    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }

    test_full_treemix { includeConfig 'conf/tests/test_full_treemix.nf' }
    test_full_vcftools { includeConfig 'conf/tests/test_full_vcftools.nf' }

    test_sample_filters { includeConfig 'conf/tests/test_sample_filter.config' }
    test_snp_filters { includeConfig 'conf/tests/test_snp_filter.config' }
    test_sample_snp_filters { includeConfig 'conf/tests/test_sample_snp_filters.config' }
    test_filters_summary_stats { includeConfig 'conf/tests/test_filters_summary.config' }
    test_filters_summary_pca { includeConfig 'conf/tests/test_filter_summary_pca.config' }
    test_pca { includeConfig 'conf/tests/test_pca.config' }
    test_filter_admixture { includeConfig 'conf/tests/test_filter_admixture.config' }
    test_selscan { includeConfig 'conf/tests/test_selscan.config' }
    test_sweepfinder2 { includeConfig 'conf/tests/test_sweepfinder2.config' }
    test_vcftools_selection { includeConfig 'conf/tests/test_vcftools_selection.config' }

    test_plink_sample_filters { includeConfig 'conf/tests/test_plink_sample_filter.config' }
    test_plink_snp_filters { includeConfig 'conf/tests/test_plink_snp_filter.config' }
    test_plink_filter_summary { includeConfig 'conf/tests/test_plink_filter_summary.config' }
    test_plink_fst_ibs { includeConfig 'conf/tests/test_plink_fst_ibs.config' }
    test_plink_vcftools { includeConfig 'conf/tests/test_plink_vcftols_selection.config' }
    test_plink_treemix { includeConfig 'conf/tests/test_plink_treemix.config' }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
//docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'popgen48/scalepopgen_v1'
    author          = """@BioInf2305"""
    homePage        = 'https://github.com/popgen48/scalepopgen_v1'
    description     = """scalepopgen_v1 is a fully automated nextflow-based pipeline that takes vcf files or plink generated bed files as input and employ a variety of open-source tools to carry out comprehensive population genomic analyses. """
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
